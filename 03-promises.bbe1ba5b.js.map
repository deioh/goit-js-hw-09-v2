{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,0BAG3BF,KAAEM,EAAIH,MAAEI,EAAKH,KAAEI,EAAIH,OAAEI,GAAWV,EAqBtC,SAASW,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFnB,EAAAuB,OAAOC,QAAQ,uBAAqBV,QAAiBC,OAErDf,EAAAuB,OAAOE,QAAQ,sBAAoBX,QAAeC,MAAU,GAE7DA,EAAM,G,CA7BbN,EAAKiB,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBACF,IAAIC,EAAaC,OAAOpB,EAAMqB,OAG9B,IAAK,IAAIC,EAAgB,EAAGA,GAAiBpB,EAAOmB,MAAOC,IACzDnB,EAAcmB,EAAeH,GAC1BI,MAAK,EAACnB,SAAEA,EAAUR,MAAA4B,MACjBlC,EAAAuB,OAAOC,QAAQ,uBAAqBV,QAAiBoB,MAAU,IAEhEC,OAAM,EAACrB,SAAEA,EAAUR,MAAA8B,MAClBpC,EAAAuB,OAAOE,QAAQ,sBAAoBX,QAAiBsB,MAAU,IAGpEP,GAAcC,OAAOnB,EAAKoB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', promiseGenerator);\n\nfunction promiseGenerator(e) {\n  e.preventDefault();\n  let delayValue = Number(delay.value);\n  // let stepValue = Number(step.value);\n  // let amountValue = Number(amount.value);\n  for (let positionValue = 1; positionValue <= amount.value; positionValue++) {\n    createPromise(positionValue, delayValue)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n  delayValue += Number(step.value);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n\n    //   if (shouldResolve) {\n    //     // Fulfill\n    //   } else {\n    //     // Reject\n    //   }\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createPromise","position","delay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","success","failure","addEventListener","e","preventDefault","delayValue","Number","value","positionValue","then","delay1","catch","delay2"],"version":3,"file":"03-promises.bbe1ba5b.js.map"}