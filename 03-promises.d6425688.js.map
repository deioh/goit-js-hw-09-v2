{"mappings":"oeAAAA,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,0BAI3BF,KAAEM,EAAIH,MAAEI,EAAKH,KAAEI,EAAIH,OAAEI,GAAWV,EAEtCO,EAAKI,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAEC,iBACeC,OAAON,EAAMO,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  //  buttonStart: document.querySelector('button[data-start]'),\n};\n\nconst { form, delay, step, amount } = refs;\n\nform.addEventListener('submit', promiseGenerator);\n\nfunction promiseGenerator(e) {\n  e.preventDefault();\n  let delayValue = Number(delay.value);\n  // let stepValue = Number(step.value);\n  // let amountValue = Number(amount.value);\n  // for (let i = 1; i <= amountValue; i+=1) {\n  //   createPromise(i, delayValue)\n  //     .then(({ position, delay }) => {\n  //       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  //     })\n  //     .catch(({ position, delay }) => {\n  //       Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  //     });\n  //   delayValue += stepValue;\n  // }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n"],"names":["parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$form","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","addEventListener","e","preventDefault","Number","value"],"version":3,"file":"03-promises.d6425688.js.map"}